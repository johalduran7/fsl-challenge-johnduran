name: Deploy App

on:
  push:
    branches:
      - devel
      - stage
      - prod  

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/codebase/rdicidr-0.1.0
    steps: 
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '15'

      - name: Install dependencies
        run: |
          npm install -g npm@7
          npm install --save-dev eslint-config-prettier
          npm install --save-dev @testing-library/jest-dom


      - name: Run linter
        run: npm run lint


      - name: Run formatter
        run: npx prettier --write "src/**/*.{js,jsx}"


      - name: Run tests
        env: 
          CI: true
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Upload Artifact build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: app/codebase/rdicidr-0.1.0/build/

  validate-apply-terraform-config:
    runs-on: ubuntu-latest
    needs: build
    environment: AWS
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: load variables
        run : |
          ENV=$(echo ${{ github.ref_name }})
          echo "ENV=$ENV" >> $GITHUB_ENV
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: app/codebase/rdicidr-0.1.0/build/

      - name: Terraform validate and apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ env.AWS_REGION }}
          TF_VAR_env: ${{ env.ENV }} 
          #TF_VAR_build_path: "./app/build/"
          #TF_WORKSPACE: "${{ env.ENV }}"
        run: |
          cd terraform
          ENV=$(echo ${{ github.ref_name }})
          github_workspace=$(echo ${{ github.workspace }})
          echo $github_workspace
          build_path=$(echo "$github_workspace"/"app/build")
          ls $build_path
          echo $build_path
          echo $ENV
          echo $GITHUB_ENV
          var_file=$(echo ./envs/"$ENV".tfvars)
          terraform init
          current_workspace=$(terraform workspace show)
          echo current workspace: $current_workspace
          terraform workspace select $ENV
          terraform apply -auto-approve -var-file $var_file  -var "build_path=$build_path" 
